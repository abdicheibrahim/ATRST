@using ProjetAtrst.ViewModels.Account
@using System.Text.Json
@model CompleteProfileViewModel

@{
    Layout = "_LayoutResearcher";
    ViewData["Title"] = "Profil";
}
@if (Model.IsCompleted)
{
    <div class="alert alert-success text-center alert-dismissible fade show" role="alert">
        Votre profil est<strong> complet.</strong> Vous pouvez le modifier ici.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
else
{
    <div class="alert alert-warning text-center">
        Veuillez compléter les informations ci-dessous pour activer votre compte.
    </div>
}

@section Styles{
    <link href="~/css/showsuccesserrormodal.css" rel="stylesheet" />
}
@await Html.PartialAsync("~/Views/Shared/Popup/_SuccessModal.cshtml")
@await Html.PartialAsync("~/Views/Shared/Popup/_ErrorModal.cshtml")
@await Html.PartialAsync("~/Views/Shared/Popup/_ModalScripts.cshtml")


<form asp-action="CompleteProfile" method="post">

    @if (!Model.IsCompleted)
    {
        <!-- RoleType -->
        <div class="row shadow-sm g-3 needs-validation p-3 mb-5 mt-3 bg-white border rounded ">
            <h5>Type de profil</h5>
            <div class="col-md-6">
                <label asp-for="RoleType" class="form-label">rôle</label>
                <select asp-for="RoleType" class="form-select" id="roleTypeSelect">
                    <option value="">-- Sélectionnez votre rôle --</option>
                    <option value=@RoleType.Researcher>Chercheur (académique)</option>
                    <option value=@RoleType.Partner>Partenaire (socio-économique)</option>
                    <option value=@RoleType.Associate>Membre associé</option>
                </select>
                <span asp-validation-for="RoleType" class="text-danger"></span>
            </div>
        </div>
    }
    else
    {
        <!-- RoleType -->
        <div class="row shadow-sm g-3 needs-validation p-3 mb-5 mt-3 bg-white border rounded ">
            <h5>Type de profil</h5>
            <div class="col-md-6">
                <label asp-for="RoleType" class="form-label">rôle</label>
                <select asp-for="RoleType" class="form-select" id="roleTypeSelect"  >
                    <option value=@Model.RoleType>@Model.RoleType</option>
                </select>
                <span asp-validation-for="RoleType" class="text-danger"></span>
            </div>
        </div>
    }


   
    <div class="row shadow-sm g-3 needs-validation p-3 mb-5 mt-3 bg-white border rounded">
        <h5>Informations personnelles</h5>

      

        <div class="col-md-6">
            <label asp-for="PersonalInformation.FirstName" class="form-label">Prénom</label>
            <input type="text" class="form-control input" asp-for="PersonalInformation.FirstName" placeholder="Entrez votre prénom">
            <span asp-validation-for="PersonalInformation.FirstName"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="PersonalInformation.LastName" class="form-label">Nom</label>
            <input type="text" class="form-control input" asp-for="PersonalInformation.LastName" placeholder="Entrez votre nom">
            <span asp-validation-for="PersonalInformation.LastName"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="PersonalInformation.FirstNameAr" class="form-label">Prénom (arabe)</label>
            <input type="text" class="form-control input" asp-for="PersonalInformation.FirstNameAr" placeholder="أدخل الاسم">
            <span asp-validation-for="PersonalInformation.FirstNameAr"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="PersonalInformation.LastNameAr" class="form-label">Nom (arabe)</label>
            <input type="text" class="form-control input" asp-for="PersonalInformation.LastNameAr" placeholder="أدخل اللقب">
            <span asp-validation-for="PersonalInformation.LastNameAr"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="PersonalInformation.Gender" class="form-label">Genre</label>
            <select class="form-control input" asp-for="PersonalInformation.Gender">
                <option value="">-- Sélectionnez le genre --</option>
                <option value="Homme">Homme</option>
                <option value="Femme">Femme</option>
            </select>
            <span asp-validation-for="PersonalInformation.Gender"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="PersonalInformation.Birthday" class="form-label">Date de naissance</label>
            <input type="date" class="form-control input" asp-for="PersonalInformation.Birthday" value="" placeholder="JJ/MM/AAAA">
            <span asp-validation-for="PersonalInformation.Birthday"></span>
        </div>
        <div class="col-md-6">
            <label asp-for="PersonalInformation.Mobile" class="form-label">Téléphone mobile</label>
            <input type="text" class="form-control input" asp-for="PersonalInformation.Mobile">
            <span asp-validation-for="PersonalInformation.Mobile"></span>
        </div>
    </div>

    <!-- SECTION CHERCHEUR -->
    <div id="sectionChercheur" class="row shadow-sm g-3 needs-validation p-3 mb-5 mt-3 bg-white border rounded">

        <h5>Détails Chercheur</h5>

        <div class="col-md-6">
            <label asp-for="Researcher.Diploma" class="form-label">Diplôme</label>
            <input type="text" class="form-control input" asp-for="Researcher.Diploma">
            <span asp-validation-for="Researcher.Diploma"></span>
        </div>

        <!-- Grade -->
        <input type="hidden" asp-for="Researcher.Grade" id="gradeHidden" />
        <div class="col-md-6">
            <label class="form-label">Grade</label>
            <select class="form-select" id="gradeSelect"></select>
            <input type="text" id="customGrade" class="form-control mt-2 d-none"
                   placeholder="Entrez le grade manuellement" />
            <span asp-validation-for="Researcher.Grade" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Researcher.Speciality" class="form-label">Spécialité</label>
            <input type="text" class="form-control input" asp-for="Researcher.Speciality">
            <span asp-validation-for="Researcher.Speciality"></span>
        </div>

        <!-- Establishment -->
        <input type="hidden" asp-for="Researcher.Establishment" id="establishmentHidden" />
        <div class="col-md-6">
            <label class="form-label">Établissement</label>
            <select class="form-select" id="establishmentSelect"></select>
            <input type="text" id="customEstablishment" class="form-control mt-2 d-none"
                   placeholder="Entrez le nom de l'établissement manuellement" />
            <span asp-validation-for="Researcher.Establishment" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Researcher.ParticipationPrograms" class="form-label"></label>
            <select asp-for="Researcher.ParticipationPrograms" class="form-control select2-keywords" multiple="multiple" style="width: 100%;">
                <!-- Options will be populated by JavaScript -->
            </select>
        </div>
       
    </div>
    
   

    <!-- SECTION PARTENAIRE -->
    <div id="sectionPartenaire" class="row shadow-sm g-3 p-3 mb-4 bg-white border rounded" style="display:none;">
        <h5>Détails Partenaire</h5>

        <div class="col-md-6">
            <label asp-for="Partner.Baccalaureat" class="form-label"></label>
            <input type="text" class="form-control" asp-for="Partner.Baccalaureat" />
            <span asp-validation-for="Partner.Baccalaureat" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Partner.Diploma" class="form-label">Diplôme</label>
            <input type="text" class="form-control input" asp-for="Partner.Diploma">
            <span asp-validation-for="Partner.Diploma"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Partner.Profession" class="form-label"></label>
            <input type="text" class="form-control" asp-for="Partner.Profession" />
            <span asp-validation-for="Partner.Profession" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Partner.Speciality" class="form-label">Spécialité</label>
            <input type="text" class="form-control input" asp-for="Partner.Speciality">
            <span asp-validation-for="Partner.Speciality"></span>
        </div>

        <!-- Establishment -->
        <input type="hidden" asp-for="Partner.Establishment" id="partenaireEstablishmentHidden" />
        <div class="col-md-6">
            <label class="form-label">Établissement</label>
            <select class="form-select" id="partenaireEstablishmentSelect"></select>
            <input type="text" id="customEstablishmentPartner" class="form-control mt-2 d-none"
                   placeholder="Entrez le nom de l'établissement manuellement" />
            <span asp-validation-for="Partner.Establishment" class="text-danger"></span>
        </div>

        <div class="col-md-12">
            <label asp-for="Partner.PartnerResearchPrograms" class="form-label"></label>
            <textarea class="form-control" asp-for="Partner.PartnerResearchPrograms"></textarea>
            <span asp-validation-for="Partner.PartnerResearchPrograms" class="text-danger"></span>
        </div>

        <div class="col-md-12">
            <label asp-for="Partner.PartnerSocioEconomicWorks" class="form-label"></label>
            <textarea class="form-control" asp-for="Partner.PartnerSocioEconomicWorks"></textarea>
            <span asp-validation-for="Partner.PartnerSocioEconomicWorks" class="text-danger"></span>
        </div>
    </div>

    <!-- SECTION ASSOCIE -->
    <div id="sectionAssocie" class="row shadow-sm g-3 p-3 mb-4 bg-white border rounded" style="display:none;">
        <h5>Membre associé</h5>

        <div class="col-md-6">
            <label asp-for="Associate.Diploma" class="form-label">Diplôme</label>
            <input type="text" class="form-control input" asp-for="Associate.Diploma">
            <span asp-validation-for="Associate.Diploma"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Associate.Speciality" class="form-label">Spécialité</label>
            <input type="text" class="form-control input" asp-for="Associate.Speciality">
            <span asp-validation-for="Associate.Speciality"></span>
        </div>
        <div class="col-md-12">
            <label asp-for="Associate.MemberParticipation" class="form-label"></label>
            <textarea class="form-control" asp-for="Associate.MemberParticipation"></textarea>
        </div>

    </div>

  

    <button type="submit" id="submitBtn" class="btn btn-success w-100">
        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="spinner"></span>
        <span id="btnText">Enregistrer</span>
    </button>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <!--select2-->  
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css  " rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js  "></script>
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />

    <script src="~/js/Spinner.js"></script>

    <!-- Show/hide partitions based on role type -->
<script>
        document.addEventListener("DOMContentLoaded", function () {
            const roleSelect = document.getElementById("roleTypeSelect");
            const sectionChercheur = document.getElementById("sectionChercheur");
            const sectionPartenaire = document.getElementById("sectionPartenaire");
            const sectionAssocie = document.getElementById("sectionAssocie");

            function toggleSections() {
                sectionChercheur.style.display = "none";
                sectionPartenaire.style.display = "none";
                sectionAssocie.style.display = "none";

                // استخدم القيم الصحيحة للـ enum
                if (roleSelect.value === "Researcher") {
                    sectionChercheur.style.display = "flex";
                } else if (roleSelect.value === "Partner") {
                    sectionPartenaire.style.display = "flex";
                } else if (roleSelect.value === "Associate") {
                    sectionAssocie.style.display = "flex";
                }
            }

            roleSelect.addEventListener("change", toggleSections);
            toggleSections(); // init
        });
    </script>

    <!-- Arabic letters only -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const arabicOnly = /^[\u0621-\u064A\s]+$/;

        const firstNameArInput = document.getElementById("FirstNameAr");
        const lastNameArInput = document.getElementById("LastNameAr");

        function validateArabicInput(inputElement) {
            const value = inputElement.value.trim();
            const validationMessage = inputElement.nextElementSibling;

            if (value.length > 0 && !arabicOnly.test(value)) {
                validationMessage.textContent = " يُسمح فقط بالحروف العربية والمسافات.";
                inputElement.classList.add("is-invalid");
            } else {
                validationMessage.textContent = "";
                inputElement.classList.remove("is-invalid");
            }
        }

        firstNameArInput?.addEventListener("input", function () {
            validateArabicInput(firstNameArInput);
        });

        lastNameArInput?.addEventListener("input", function () {
            validateArabicInput(lastNameArInput);
        });
    });
</script>
    <!-- Select2 -->
    <script>
        // مزامنة القيم مع الحقول المخفية -- وتجاهل placeholder كنص مرسل
        function syncField(selectId, inputId, hiddenId) {
            const $sel = $('#' + selectId);
            const val = $sel.val();
            const placeholder = $sel.attr('data-placeholder') || '';
            const isOther = (val === 'Autre' || val === 'Other');

            if (isOther) {
                // إذا اخترنا "Autre" نُظهر الحقل اليدوي ونأخذ منه القيمة
                $('#' + inputId).removeClass('d-none').attr('required', 'required');
                $('#' + hiddenId).val($('#' + inputId).val().trim());
            } else {
                // إخفاء الحقل اليدوي
                $('#' + inputId).addClass('d-none').removeAttr('required').val('');

                // نتأكد أنّ القيمة المرسلة ليست فارغة أو نفس نص الـ placeholder
                if (val === null || val === undefined || val === '' || val === placeholder) {
                    $('#' + hiddenId).val('');
                } else {
                    $('#' + hiddenId).val(val);
                }
            }
        }

        // تهيئة Select2 مع وضع data-placeholder للمقارنة لاحقًا
        function initSelect2(selector, type, placeholder, appendAutre = true, minimumInputLength = 2, endpointUrl) {
            const url = endpointUrl || '@Url.Action("SearchDropdown", "Project")';

            // خزّن النص كـ data attribute للمقارنة لاحقًا
            $(selector).attr('data-placeholder', placeholder);

            $(selector).select2({
                theme: 'bootstrap-5',
                width: '100%',
                placeholder: placeholder,
                allowClear: true,
                minimumInputLength: minimumInputLength,
                ajax: {
                    url: url,
                    data: function (params) {
                        return {
                            term: params.term || '',
                            type: type,
                            take: 25
                        };
                    },
                    delay: 200,
                    processResults: function (data) {
                        // نتأكد من أن البيانات بصيغة { id, text }
                        if (appendAutre && !data.some(d => (d.id || d.value) === 'Autre')) {
                            data.push({ id: 'Autre', text: 'Autre' });
                        }
                        return { results: data };
                    }
                }
            });

            // تركيز تلقائي داخل حقل البحث عند الفتح
            $(selector).on('select2:open', function () {
                setTimeout(function () {
                    document.querySelector('.select2-container--open .select2-search__field')?.focus();
                }, 0);
            });
        }

        // تبديل بين الإدخال اليدوي والاختيار من القائمة
        function toggleCustomInput(selectId, inputId) {
            const $sel = $('#' + selectId);
            const $inp = $('#' + inputId);
            const val = $sel.val();
            const isOther = (val === 'Autre' || val === 'Other');

            if (isOther) {
                $sel.prop('disabled', true);
                $inp.removeClass('d-none').attr('required', 'required').focus();
            } else {
                $sel.prop('disabled', false);
                $inp.addClass('d-none').removeAttr('required');
            }
        }

        // تعيين قيمة ابتدائية (نتجاهل null / undefined / '' لكن نسمح بـ 0)
        function setInitialValue(selector, value, text) {
            if (value === null || value === undefined || value === '') return;
            const option = new Option(text || value, value, true, true);
            $(selector).append(option).trigger('change.select2');
        }

        $(document).ready(function () {
            // 1) تهيئة القوائم
            initSelect2('#establishmentSelect', 'Establishments', '-- Sélectionnez l\'établissement --', true, 2);
            initSelect2('#partenaireEstablishmentSelect', 'Establishments', '-- Sélectionnez l\'établissement --', true, 2);
            initSelect2('#gradeSelect', 'Grades', '-- Sélectionnez un grade / diplôme --', true, 0);

            // 2) قيم ابتدائية من الموديل
            const initEst = @Html.Raw(JsonSerializer.Serialize(Model.Researcher.Establishment));
            const initEstPartner = @Html.Raw(JsonSerializer.Serialize(Model.Partner.Establishment));
            const initGrade = @Html.Raw(JsonSerializer.Serialize(Model.Researcher.Grade));

            setInitialValue('#establishmentSelect', initEst);
            setInitialValue('#partenaireEstablishmentSelect', initEstPartner);
            setInitialValue('#gradeSelect', initGrade);

            // 3) تفعيل/تعطيل الإدخال اليدوي حسب القيمة الحالية
            toggleCustomInput('establishmentSelect', 'customEstablishment');
            toggleCustomInput('partenaireEstablishmentSelect', 'customEstablishmentPartner');
            toggleCustomInput('gradeSelect', 'customGrade');

            $('#establishmentSelect').on('change', function () {
                toggleCustomInput('establishmentSelect', 'customEstablishment');
            });
            $('#partenaireEstablishmentSelect').on('change', function () {
                toggleCustomInput('partenaireEstablishmentSelect', 'customEstablishmentPartner');
            });
            $('#gradeSelect').on('change', function () {
                toggleCustomInput('gradeSelect', 'customGrade');
            });

            // 4) مزامنة قبل الإرسال
            $('form').on('submit', function () {
                syncField('establishmentSelect', 'customEstablishment', 'establishmentHidden');
                syncField('partenaireEstablishmentSelect', 'customEstablishmentPartner', 'partenaireEstablishmentHidden');
                syncField('gradeSelect', 'customGrade', 'gradeHidden');
            });

            // ✅ حفظ القيمة السابقة قبل المسح (للتعرف إذا كانت "Autre")
            $('#establishmentSelect, #partenaireEstablishmentSelect, #gradeSelect').on('select2:clearing', function (e) {
                const $select = $(this);
                $select.data('prev-value', $select.val());
            });

            // ✅ ✅ ✅ حدث مضمون: select2:clear (بعد المسح) + تأخير 100ms لضمان استقرار الواجهة
            $('#establishmentSelect, #partenaireEstablishmentSelect, #gradeSelect').on('select2:clear', function (e) {
                const $select = $(this);
                const wasOther = $select.data('prev-value') === 'Autre' || $select.data('prev-value') === 'Other';

                if (wasOther) {
                    // إخفاء الحقل اليدوي المرتبط
                    if ($select.is('#establishmentSelect')) {
                        $('#customEstablishment').addClass('d-none').removeAttr('required').val('');
                    } else if ($select.is('#partenaireEstablishmentSelect')) {
                        $('#customEstablishmentPartner').addClass('d-none').removeAttr('required').val('');
                    } else if ($select.is('#gradeSelect')) {
                        $('#customGrade').addClass('d-none').removeAttr('required').val('');
                    }

                    // ✅ الحل المضمون: إعادة فتح القائمة بعد تأخير بسيط
                    setTimeout(function () {
                        // الطريقة 1: استخدام open (جربها أولاً)
                        $select.select2('open');

                        // ⚠️ إذا لم تنجح الطريقة أعلاه، فعّل هذا السطر بدلها:
                        // $select.next('.select2-container').find('.select2-selection').trigger('mousedown');
                    }, 100);
                }

                // تنظيف البيانات المؤقتة
                $select.removeData('prev-value');
            });

        }); // نهاية $(document).ready

    </script>

    <!-- keywords -->
<script>
        $(document).ready(function() {
            $('.select2-keywords').select2({
                tags: true,
                tokenSeparators: [','],
                placeholder: "Indiquez votre participation à des programmes de recherche",
                allowClear: true,
                width: '100%'
            });

            // تحميل الكلمات المفتاحية الموجودة مسبقاً
            @if (Model.Researcher.ParticipationPrograms != null && Model.Researcher.ParticipationPrograms.Any())
            {
                    <text>
                            var existingKeywords = @Html.Raw(JsonSerializer.Serialize(Model.Researcher.ParticipationPrograms));
                        if (existingKeywords && existingKeywords.length > 0) {
                            existingKeywords.forEach(function(item) {
                                // أضف الخيار إذا لم يكن موجود
                                if ($('.select2-keywords option[value="' + item + '"]').length === 0) {
                                    $('.select2-keywords').append(new Option(item, item, true, true));
                                }
                            });
                            // بعد إضافة الخيارات حددها كـ selected
                            $('.select2-keywords').trigger('change');
                        }
                    </text>
            }
        });
</script>

}
