@using ProjetAtrst.ViewModels.ProjectRequests
@model List<ProjectJoinRequestViewModel>
@{
    ViewData["Title"] = "Demandes d'adh√©sion";
    Layout = "_LayoutProject";
}

<h3>Demandes d'adh√©sion</h3>

<table class="table table-bordered">
    <thead class="table-light">
        <tr>
            <th><i class="bi bi-person me-1"></i>Exp√©diteur</th>
            <th><i class="bi bi-person me-1"></i>Type de compte</th>
            <th><i class="bi bi-info-circle me-1"></i>Statut</th>
            <th><i class="bi bi-calendar3 me-1"></i>Date</th>
            <th><i class="bi bi-gear me-1"></i>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var req in Model)
        {
            <tr>
                <td>@req.SenderName</td>
                <td>@req.SenderRole</td>
                <td>
                    @switch (req.Status)
                    {
                        case RequestStatus.Pending:
                            <span class="badge bg-warning text-dark">
                                <i class="bi bi-hourglass-split me-1"></i>En attente
                            </span>
                            break;
                        case RequestStatus.Accepted:
                            <span class="badge bg-success">
                                <i class="bi bi-check-circle me-1"></i>Accept√©
                            </span>
                            break;
                        case RequestStatus.Rejected:
                            <span class="badge bg-danger">
                                <i class="bi bi-x-circle me-1"></i>Rejet√©
                            </span>
                            break;
                    }
                </td>
                <td>@req.SentAt.ToString("yyyy-MM-dd")</td>
                <td>
                    @if (req.Status == RequestStatus.Pending)
                    {
                        <div class="d-flex gap-2">
                            <form method="post" asp-action="AcceptRequest" asp-controller="ProjectContext" class="mb-0">
                                <input type="hidden" name="requestId" value="@req.RequestId" />
                                <button type="submit" class="btn btn-sm btn-success">
                                    <i class="bi bi-check-lg"></i> Accepter
                                </button>
                            </form>
                            <form method="post" asp-action="RejectRequest" asp-controller="ProjectContext" class="mb-0">
                                <input type="hidden" name="requestId" value="@req.RequestId" />
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="bi bi-x-lg"></i> Rejeter
                                </button>
                            </form>

                            <button type="button"
                                    class="btn btn-sm btn-primary btn-details"
                                    data-id="@req.SenderId"
                                    data-role="@req.SenderRole">
                                <i class="bi bi-person-lines-fill"></i> D√©tails
                            </button>
                        </div>
                    }
                    else
                    {
                        <span class="text-muted">Aucune action requise</span>
                    }
                </td>

            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="partnerDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg  modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content" id="partnerDetailsContent">
            <!-- ÿ≥Ÿäÿ™ŸÖ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ ŸáŸÜÿß ÿπÿ®ÿ± AJAX -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            let partnerDetailsModalTrigger = null;

            function getDetailsUrl(role) {
                switch (role.toLowerCase()) {
                    case "researcher": return '@Url.Action("Details", "Researcher")';
                    case "associate": return '@Url.Action("Details", "Associate")';
                    default: return '@Url.Action("Details", "Partner")';
                }
            }

            // üìÑ ÿπŸÜÿØ ÿßŸÑÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ ÿ≤ÿ± ÿßŸÑÿ™ŸÅÿßÿµŸäŸÑ
            $(document).on("click", ".btn-details", function (e) {
                e.preventDefault();
                const id = $(this).data("id");
                const role = $(this).data("role");
                if (!id) {
                    console.error("ŸÖÿπÿ±ŸÅ ÿßŸÑÿ¥ÿ±ŸäŸÉ ÿ∫Ÿäÿ± ŸÖÿ™ŸàŸÅÿ±");
                    return;
                }

                partnerDetailsModalTrigger = this;

                $.ajax({
                    url: getDetailsUrl(role),
                    type: "GET",
                    data: { Id: id },
                    beforeSend: function () {
                        $("#partnerDetailsContent").html(`
                            <div class="text-center p-4">
                                <i class="fas fa-spinner fa-spin"></i> Chargement...
                            </div>
                        `);

                        const modalEl = document.getElementById("partnerDetailsModal");
                        const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                        modal.show();
                    },
                    success: function (data) {
                        $("#partnerDetailsContent").html(data);
                    },
                    error: function () {
                        $("#partnerDetailsContent").html(`
                            <div class="alert alert-danger m-3">Erreur lors du chargement des d√©tails.</div>
                        `);
                    }
                });
            });

            // üßπ ÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑŸÖŸàÿØÿßŸÑ Ÿàÿ•ÿ±ÿ¨ÿßÿπ ÿßŸÑÿ™ÿ±ŸÉŸäÿ≤ ÿ®ÿπÿØ ÿßŸÑÿ∫ŸÑŸÇ
            $('#partnerDetailsModal').on('hidden.bs.modal', function () {
                $('#partnerDetailsContent').empty();
                if (partnerDetailsModalTrigger) {
                    setTimeout(() => {
                        partnerDetailsModalTrigger.focus();
                        partnerDetailsModalTrigger = null;
                    }, 50);
                }
            });
        });
    </script>
}
